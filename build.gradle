plugins {
 	id 'net.kyori.blossom' version '1.1.0'
	id 'com.github.johnrengelman.shadow' version '4.0.4'
	id 'maven-publish'
	id 'java'
}

group 'me.crypnotic'
version '3.0.0-SNAPSHOT'
description 'An open-source essential suite for the Velocity proxy'

repositories {
	mavenCentral()

	maven {
        url 'https://repo.velocitypowered.com/releases/'
    }
    
    maven {
        url = 'https://repo.spongepowered.org/maven'
    }
}

defaultTasks("clean", "build", "shadowJar")

dependencies {
	compile ('org.spongepowered:configurate-hocon:3.6') {
		exclude group: 'org.checkerframework', module: 'checker-qual'
		exclude group: 'com.google.guava', module: 'guava'
	}
	
	compileOnly 'com.velocitypowered:velocity-api:3.0.0'
	annotationProcessor 'com.velocitypowered:velocity-api:3.0.0'

	compileOnly 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.4'
}

blossom {
	replaceToken '@ID@', name.toLowerCase()
	replaceToken '@NAME@', name
	replaceToken '@VERSION@', version
	replaceToken '@DESCRIPTION@', description
}

publishing {
	publications {
	    shadow(MavenPublication) { publication ->
      		from project.shadow.component(publication)
    	}
	}
	
	repositories {
		maven {
			def releasesRepoUrl = System.getenv('mavenUrl')
			def snapshotsRepoUrl = System.getenv('mavenSnapshotUrl')
			
			url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
				
			def mavenUsername = System.getenv('mavenUsername')
			def mavenPassword = System.getenv('mavenPassword')
			if (mavenUsername != null && mavenPassword != null) {
				credentials {
					username = mavenUsername
					password = mavenPassword
				}
			}
		}
	}
} 